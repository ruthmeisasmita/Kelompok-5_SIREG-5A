import React, { useState } from "react"; 
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  StyleSheet,
  Modal,
} from "react-native";
import { FontAwesome } from "@expo/vector-icons";

export default function App() {
  const [modalVisible, setModalVisible] = useState(false);

  const activities = [
    { title: "Bimbingan pengajuan beasiswa", date: "4 Oktober 2023, 10:30 siang" },
    { title: "Bimbingan KRS semester 2", date: "8 Agustus 2023, 18:00 siang" },
    { title: "Bimbingan hasil studi semester 1", date: "10 Januari 2023, 10:00 siang" },
    { title: "Bimbingan KRS semester 1", date: "2 Agustus 2022, 13:45 siang" },
  ];

  const handleDownload = () => {
    // Menampilkan modal ketika tombol unduh ditekan
    setModalVisible(true);
  };

  return (
    <ScrollView style={styles.container}>
      <View style={styles.header}>
        <TouchableOpacity>
          <View style={styles.iconContainer}>
            <FontAwesome name="arrow-left" size={16} color="#FFC727" />
          </View>
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Logbook</Text>
        <View style={styles.headerIcons}>
          <FontAwesome
            name="search"
            size={24}
            color="black"
            style={styles.searchIcon}
          />
          <FontAwesome name="ellipsis-v" size={24} color="black" />
        </View>
      </View>
      <Text style={styles.sectionTitle}>Aktivitas Terakhir</Text>
      <View style={styles.activityList}>
        {activities.map((activity, index) => (
          <ActivityItem
            key={index}
            title={activity.title}
            date={activity.date}
            isLast={index === activities.length - 1}
          />
        ))}
      </View>
      <TouchableOpacity style={styles.downloadButton} onPress={handleDownload}>
        <Text style={styles.downloadButtonText}>Unduh Aktifitas</Text>
      </TouchableOpacity>

      {/* Modal untuk konfirmasi unduhan */}
      <Modal
        transparent={true}
        visible={modalVisible}
        onRequestClose={() => setModalVisible(false)}
      >
        <View style={styles.modalOverlay}>
          <View style={styles.modalContent}>
            <Text style={styles.modalText}>File telah di download</Text>
            <TouchableOpacity
              style={styles.modalButton}
              onPress={() => setModalVisible(false)}
            >
              <Text style={styles.modalButtonText}>OK</Text>
            </TouchableOpacity>
          </View>
        </View>
      </Modal>
    </ScrollView>
  );
}

const ActivityItem = ({ title, date, isLast }) => (
  <View style={styles.activityItem}>
    <View style={styles.activityIndicator}>
      <View style={styles.activityCircle} />
      {!isLast && <View style={styles.activityLine} />}
    </View>
    <View>
      <Text style={styles.activityTitle}>{title}</Text>
      <Text style={styles.activityDate}>{date}</Text>
    </View>
  </View>
);

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "white",
    padding: 16,
    marginTop: 50,
  },
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 16,
  },
  iconContainer: {
    width: 32,
    height: 32,
    borderRadius: 16,
    backgroundColor: "white",
    borderWidth: 2,
    borderColor: "#FFC727",
    justifyContent: "center",
    alignItems: "center",
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: "bold",
  },
  headerIcons: {
    flexDirection: "row",
    alignItems: "center",
  },
  searchIcon: {
    marginRight: 30,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: "bold",
    color: "#225580",
    marginBottom: 16,
    marginTop: 20,
  },
  activityList: {
    marginTop: 20,
    marginBottom: 16,
  },
  activityItem: {
    flexDirection: "row",
    alignItems: "flex-start",
    marginBottom: 50,
    position: "relative",
  },
  activityIndicator: {
    alignItems: "center",
    marginRight: 16,
  },
  activityCircle: {
    width: 32,
    height: 32,
    backgroundColor: "#FFC727",
    borderRadius: 16,
    zIndex: 1,  // Tetap di atas garis
  },
  activityLine: {
    position: "absolute",
    top: 16,  
    left: 15,  
    width: 2,
    height: 70, 
    backgroundColor: "#63ABE6",
  },
  activityTitle: {
    fontSize: 16,
    fontWeight: "bold",
    color: "#225580",
  },
  activityDate: {
    fontSize: 14,
    color: "#9CA3AF",
  },
  downloadButton: {
    backgroundColor: "#63ABE6",
    paddingVertical: 12,
    paddingHorizontal: 30,
    borderRadius: 15,
    alignItems: "center",
    marginHorizontal: 60,
  },
  downloadButtonText: {
    color: "#3470A2",
    fontSize: 16,
    fontWeight: "bold",
  },
  modalOverlay: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "rgba(0, 0, 0, 0.5)",
  },
  modalContent: {
    width: 256,
    backgroundColor: "#FFFFFF",
    borderRadius: 20,
    padding: 20,
    alignItems: "center",
  },
  modalText: {
    fontSize: 16,
    color: "#374151",
    marginBottom: 16,
  },
  modalButton: {
    backgroundColor: "#63ABE6",
    paddingVertical: 8,
    paddingHorizontal: 30,
    borderRadius: 20,
  },
  modalButtonText: {
    color: "#3470A2",
    fontSize: 16,
  },
});
